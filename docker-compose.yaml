version: '3.7'

services:
  identity-db:
    image: postgres
    volumes:
      - ".data/keycloak/db:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  identity-service:
    image: quay.io/keycloak/keycloak:16.1.1
    ports:
      - "8081:8080"
    networks:
      - default
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: identity-db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
  discovery-server:
    image: discovery-server
    build:
      context: ./discovery-server/
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - default
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8761"]
        interval: 30s
        timeout: 10s
        retries: 5
  config-server:
    image: config-server
    build:
      context: ./config-server/
      dockerfile: Dockerfile
    depends_on:
      discovery-server:
        condition: service_healthy
    ports:
      - "8888:8888"
    environment:
      - discoveryhost=discovery-server
      - discoveryport=8761
    networks:
      - default
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8888/config-server/dev"]
        interval: 30s
        timeout: 10s
        retries: 5
  catalog-service:
    image: catalog-service
    build:
      context: ./catalog-service/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - discoveryhost=discovery-server
      - discoveryport=8761
      - dbhost=catalog-database
      - dbport=3306
      - keystore=/keystore
      - identityurl=http://identity-service:8081/auth
    volumes:
      - "./certificates:/keystore"
    networks:
      - default
    depends_on:
      config-server:
        condition: service_healthy
      catalog-database:
        condition: service_healthy

  catalog-database:
    image: mysql:latest
    container_name: catalogdb
    ports:
      - "3306:3306"
    volumes:
      - "./.data/catalogdb:/var/lib/mysql"
      - "./catalog-service/src/main/resources:/var/tmp/sqlscripts"
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
        interval: 30s
        timeout: 20s
        retries: 5
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: catalogdb
    networks:
      - default
  messaging-service:
    image: rabbitmq:3-management
    container_name: messagebus
    ports:
      - 5673:5672
      - 15673:15672
    volumes:
      - "./.messagebus/data:/var/lib/rabbitmq/"
      - "./messagebus/log/:/var/log/rabbitmq"
      
  
networks:
  default:
    driver: bridge